{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"RNAIndel RNAIndel calls small coding indels from tumor RNA-Seq data and classifies them as somatic, germline, and artifactual. You can also use RNAIndel as a postprocessor to classify indels called by your own caller. RNAIndel supports GRCh38 and 37. Explore the docs \u00bb Read the paper \u00bb Request Feature | Report Bug \u2b50 Consider starring the repo! \u2b50 Quick Start RNAIndel can be executed via Docker or ran locally, downloadable via PyPI. Docker We publish our latest docker builds on GitHub. You can run the latest code base by running the following command > docker run --rm -v ${pwd}:/data ghcr.io/stjude/rnaindel:latest If you want to have a more native feel, you can add an alias to your shell's rc file. > alias rnaindel=\"docker run --rm -v ${pwd}:/data ghcr.io/stjude/rnaindel:latest\" Note: if its the first time you are executing the docker run command, you will see the output of docker downloading the image PyPI Installing RNAIndel via the pip command will install the dependencies except for Java. Dependencies python>=3.6.0 pandas>=0.23.0 scikit-learn>=0.20.0 pysam>=0.13.0 java>=1.8.0 > pip install rnaindel Test the installation. > rnaindel usage: rnaindel <subcommand> [<args>] subcommands are: analysis Predict somatic indels from tumor RNA-Seq data feature Calculate and report features for training nonsomatic Compile non-somatic indel panel reclassification Reclassify false positives by non-somatic panel recurrence Annotate false positives by recurrence training Train models positional arguments: subcommand analysis, feature, nonsomatic, reclassification, recurrence, training optional arguments: -h, --help show this help message and exit --version show program's version number and exit You can download data package (GRCh38, GRCh37) and unpack it in a convenient directory on your system. # GRCh38 > curl -LO http://ftp.stjude.org/pub/software/RNAIndel/data_dir_38.tar.gz > tar -xzf data_dir_38.tar.gz # GRCh37 > curl -LO http://ftp.stjude.org/pub/software/RNAIndel/data_dir_37.tar.gz > tar -xzf data_dir_37.tar.gz Test it out! \u276f rnaindel analysis -i ./sample_data/inputs/sample.bam \\ -o output.vcf \\ -r ./sample_data/inputs/chr10.fa \\ -d ./data_dir_38 indel calling completed successfully. rnaindel analysis completed successfully. Usage RNAIndel has 6 subcommands: analysis analyze RNA-Seq data for indel discovery feature calculate features for training nonsomatic make a non-somatic indel panel reclassification reclassify false positives by non-somatic panel recurrence annotate false positives by recurrence training train and update the models Subcommands are invoked: rnaindel subcommand [subcommand-specific options] Discover somatic indels ( demo ) Input BAM file RNAIndel expects STAR 2-pass mapped BAM file with sorted by coordinate and MarkDuplicates . Further preprocessing such as indel realignment may prevent desired behavior (RNAIndel internally realigns indels to correct allele count). Use the built-in caller RNAIndel calls indels by the built-in caller , which is optimized for RNA-Seq indel calling, and classifies detected indels as somatic, germline, and artifactual. rnaindel analysis -i BAM -o OUTPUT_VCF -r REFERENCE -d DATA_DIR [other options] Use your caller RNAIndel can be used as a postprocessor for indel calls generated by your caller such as GATK-HaplotypeCaller , Mutect2 and freebayes . Specify the input VCF file with -v . rnaindel analysis -i BAM -v INPUT_VCF -o OUTPUT_VCF -r REFERENCE -d DATA_DIR [other options] Options -i input STAR -mapped BAM file (required) -o output VCF file (required) -r reference genome FASTA file (required) -d data directory contains trained models and databases (required) -v VCF file from user's caller (default: None) other options (click to open) -q STAR mapping quality MAPQ for unique mappers (default: 255) -p number of cores (default: 1) -m maximum heap space (default: 6000m) -l directory to store log files (default: current) -n user-defined panel of non-somatic indels in tabixed VCF format (default: built-in reviewed indel set) -g user-provided germline indel database in tabixed VCF format (default: built-in database in data dir) use only if the model is trained with the user-provided database ( more ). --region target genomic region. specify by chrN:start-stop (default: None) --exclude-softclipped-alignments softclipped indels will not be used for analysis if added (default: False) Train RNAIndel Users can train RNAIndel with their own training set. Filter false positives RNAIndel supports custom filtering to refine the predicted results. Contact kohei.hagiwara[AT]stjude.org Please let me know what your experience with RNAIndel was like (even bad comments are welcome)! Limitations RNAIndel does not perform well for samples with microsatellite instability such as colon adenocarcinoma hypermutated subtype.","title":"Home"},{"location":"#quick-start","text":"RNAIndel can be executed via Docker or ran locally, downloadable via PyPI.","title":"Quick Start"},{"location":"#docker","text":"We publish our latest docker builds on GitHub. You can run the latest code base by running the following command > docker run --rm -v ${pwd}:/data ghcr.io/stjude/rnaindel:latest If you want to have a more native feel, you can add an alias to your shell's rc file. > alias rnaindel=\"docker run --rm -v ${pwd}:/data ghcr.io/stjude/rnaindel:latest\" Note: if its the first time you are executing the docker run command, you will see the output of docker downloading the image","title":"Docker"},{"location":"#pypi","text":"Installing RNAIndel via the pip command will install the dependencies except for Java.","title":"PyPI"},{"location":"#dependencies","text":"python>=3.6.0 pandas>=0.23.0 scikit-learn>=0.20.0 pysam>=0.13.0 java>=1.8.0 > pip install rnaindel Test the installation. > rnaindel usage: rnaindel <subcommand> [<args>] subcommands are: analysis Predict somatic indels from tumor RNA-Seq data feature Calculate and report features for training nonsomatic Compile non-somatic indel panel reclassification Reclassify false positives by non-somatic panel recurrence Annotate false positives by recurrence training Train models positional arguments: subcommand analysis, feature, nonsomatic, reclassification, recurrence, training optional arguments: -h, --help show this help message and exit --version show program's version number and exit You can download data package (GRCh38, GRCh37) and unpack it in a convenient directory on your system. # GRCh38 > curl -LO http://ftp.stjude.org/pub/software/RNAIndel/data_dir_38.tar.gz > tar -xzf data_dir_38.tar.gz # GRCh37 > curl -LO http://ftp.stjude.org/pub/software/RNAIndel/data_dir_37.tar.gz > tar -xzf data_dir_37.tar.gz Test it out! \u276f rnaindel analysis -i ./sample_data/inputs/sample.bam \\ -o output.vcf \\ -r ./sample_data/inputs/chr10.fa \\ -d ./data_dir_38 indel calling completed successfully. rnaindel analysis completed successfully.","title":"Dependencies"},{"location":"#usage","text":"RNAIndel has 6 subcommands: analysis analyze RNA-Seq data for indel discovery feature calculate features for training nonsomatic make a non-somatic indel panel reclassification reclassify false positives by non-somatic panel recurrence annotate false positives by recurrence training train and update the models Subcommands are invoked: rnaindel subcommand [subcommand-specific options]","title":"Usage"},{"location":"#discover-somatic-indels-demo","text":"","title":"Discover somatic indels (demo)"},{"location":"#input-bam-file","text":"RNAIndel expects STAR 2-pass mapped BAM file with sorted by coordinate and MarkDuplicates . Further preprocessing such as indel realignment may prevent desired behavior (RNAIndel internally realigns indels to correct allele count).","title":"Input BAM file"},{"location":"#use-the-built-in-caller","text":"RNAIndel calls indels by the built-in caller , which is optimized for RNA-Seq indel calling, and classifies detected indels as somatic, germline, and artifactual. rnaindel analysis -i BAM -o OUTPUT_VCF -r REFERENCE -d DATA_DIR [other options]","title":"Use the built-in caller"},{"location":"#use-your-caller","text":"RNAIndel can be used as a postprocessor for indel calls generated by your caller such as GATK-HaplotypeCaller , Mutect2 and freebayes . Specify the input VCF file with -v . rnaindel analysis -i BAM -v INPUT_VCF -o OUTPUT_VCF -r REFERENCE -d DATA_DIR [other options]","title":"Use your caller"},{"location":"#options","text":"-i input STAR -mapped BAM file (required) -o output VCF file (required) -r reference genome FASTA file (required) -d data directory contains trained models and databases (required) -v VCF file from user's caller (default: None) other options (click to open) -q STAR mapping quality MAPQ for unique mappers (default: 255) -p number of cores (default: 1) -m maximum heap space (default: 6000m) -l directory to store log files (default: current) -n user-defined panel of non-somatic indels in tabixed VCF format (default: built-in reviewed indel set) -g user-provided germline indel database in tabixed VCF format (default: built-in database in data dir) use only if the model is trained with the user-provided database ( more ). --region target genomic region. specify by chrN:start-stop (default: None) --exclude-softclipped-alignments softclipped indels will not be used for analysis if added (default: False)","title":"Options"},{"location":"#train-rnaindel","text":"Users can train RNAIndel with their own training set.","title":"Train RNAIndel"},{"location":"#filter-false-positives","text":"RNAIndel supports custom filtering to refine the predicted results.","title":"Filter false positives"},{"location":"#contact","text":"kohei.hagiwara[AT]stjude.org Please let me know what your experience with RNAIndel was like (even bad comments are welcome)!","title":"Contact"},{"location":"#limitations","text":"RNAIndel does not perform well for samples with microsatellite instability such as colon adenocarcinoma hypermutated subtype.","title":"Limitations"},{"location":"filtering/","text":"Indel filtration RNAIndel can compile a filtering panel and apply it to filter artifact and germline indels predicted as somatic. Step 1 (indel calling on normal samples) Generate VCF files from normal RNA-Seq samples. Such samples may be matched or publicly available normal RNA-Seq data with similar technical specifications. VCFs may be from your caller or RNAIndel: rnaindel analysis -i NORMAL_i_BAM -r REFERENCE -d DATA_DIR -o NORMAL_i_VCF (for i = 1,...,N) Step 2 (panel compilation) RNAIndel compiles a non-somatic indel panel using common non-COSMIC indels found in matched or public normal samples. rnaindel nonsomatic --vcf-list FILE --count INT -o NONSOMATIC_VCF -r REFERENCE -d DATA_DIR Options --vcf-list file containing paths to normal VCF files ( example ) (required) --count indel occurrence count to be defined as common in the input set of VCF files (required) -o output non-somatic VCF file (required) -r reference genome FASTA file (required) -d data directory contains the COSMIC database (required) Step 3 (reclassification) Putative somatic indels found in the non-somatic panel will be reclassifed based on the prediction probability assigned by RNAIndel. rnaindel reclassification -i RNAIndel_OUTPUT_VCF -o RECLASSIFIED_VCF -r REFERENCE -n NON_SOMATIC_VCF.gz Options -i RNAIndel output VCF file to be reclassified (required). -o reclassifed VCF file (required) -r reference genome FASTA file (required) -n non-somatic indel panel in bgzip-compressed VCF file (required) Example panel Panels compiled from 100 blood RNA samples of healthy volunteers ( PRJNA553703 ) are available . Recurrent non-COSMIC indel annotation When multiple RNAIndel output VCF files are available as in the case of cohort studies, RNAIndel annotates indels recurring in the samples that are not present in the COSMIC database. Such recurrent indels are possibly common artifacual/germline indels rather than somatic hotspots. Annotation is made in INFO field. rnaindel recurrence --vcf-list FILE -r REFERENCE -d DATADIR --out-dir Options --vcf-list file containing paths to RNAIndel output VCF files ( example ) (required) -r reference genome FASTA file (required) -d data directory contains the COSMIC database (required) --out-dir output directory for annotated VCF file. The input file dir is used if not specified. (file name will not be changed after annotation)","title":"Filtering"},{"location":"filtering/#indel-filtration","text":"RNAIndel can compile a filtering panel and apply it to filter artifact and germline indels predicted as somatic.","title":"Indel filtration"},{"location":"filtering/#step-1-indel-calling-on-normal-samples","text":"Generate VCF files from normal RNA-Seq samples. Such samples may be matched or publicly available normal RNA-Seq data with similar technical specifications. VCFs may be from your caller or RNAIndel: rnaindel analysis -i NORMAL_i_BAM -r REFERENCE -d DATA_DIR -o NORMAL_i_VCF (for i = 1,...,N)","title":"Step 1 (indel calling on normal samples)"},{"location":"filtering/#step-2-panel-compilation","text":"RNAIndel compiles a non-somatic indel panel using common non-COSMIC indels found in matched or public normal samples. rnaindel nonsomatic --vcf-list FILE --count INT -o NONSOMATIC_VCF -r REFERENCE -d DATA_DIR","title":"Step 2 (panel compilation)"},{"location":"filtering/#options","text":"--vcf-list file containing paths to normal VCF files ( example ) (required) --count indel occurrence count to be defined as common in the input set of VCF files (required) -o output non-somatic VCF file (required) -r reference genome FASTA file (required) -d data directory contains the COSMIC database (required)","title":"Options"},{"location":"filtering/#step-3-reclassification","text":"Putative somatic indels found in the non-somatic panel will be reclassifed based on the prediction probability assigned by RNAIndel. rnaindel reclassification -i RNAIndel_OUTPUT_VCF -o RECLASSIFIED_VCF -r REFERENCE -n NON_SOMATIC_VCF.gz","title":"Step 3 (reclassification)"},{"location":"filtering/#options_1","text":"-i RNAIndel output VCF file to be reclassified (required). -o reclassifed VCF file (required) -r reference genome FASTA file (required) -n non-somatic indel panel in bgzip-compressed VCF file (required)","title":"Options"},{"location":"filtering/#example-panel","text":"Panels compiled from 100 blood RNA samples of healthy volunteers ( PRJNA553703 ) are available .","title":"Example panel"},{"location":"filtering/#recurrent-non-cosmic-indel-annotation","text":"When multiple RNAIndel output VCF files are available as in the case of cohort studies, RNAIndel annotates indels recurring in the samples that are not present in the COSMIC database. Such recurrent indels are possibly common artifacual/germline indels rather than somatic hotspots. Annotation is made in INFO field. rnaindel recurrence --vcf-list FILE -r REFERENCE -d DATADIR --out-dir","title":"Recurrent non-COSMIC indel annotation"},{"location":"filtering/#options_2","text":"--vcf-list file containing paths to RNAIndel output VCF files ( example ) (required) -r reference genome FASTA file (required) -d data directory contains the COSMIC database (required) --out-dir output directory for annotated VCF file. The input file dir is used if not specified. (file name will not be changed after annotation)","title":"Options"},{"location":"sample_data/","text":"Introduction Here, we demonstrate an analysis example using sample data prepared from the Jurkat T-cell leukemia cell line. This cell line harbors two known indels in the PTEN tumor suppressor gene: a 2-nt deletion followed by a 9-nt insertion at codon 234 and a 39-nt insertion at codon 246 ( Shan et al. 2000 ). We apply RNAIndel to the sample data , which contains the GRCh38 region chr10:80,000,000-90,000,000 (the PTEN locus is chr10:87,863,113-87,971,930). Setup We assume RNAIndel is installed . Step 1: Download the data_pakage and sample data . Step 2: Unpack them under your convenient directory. cd your/convenient/directory tar xvzf sample_data.tar.gz tar xvzf data_dir_38.tar.gz \"sample_data\" directory is structured: sample_data |_ inputs (sample BAM & reference FASTA files) |_ outputs (sample output VCF files) Perform analysis Working with the built-in caller $ rnaindel analysis -i ./sample_data/inputs/sample.bam \\ -o your_test_with_built_in_caller.vcf \\ -r ./sample_data/inputs/chr10.fa \\ -d ./data_dir_38 indel calling completed successfully. # indel calling by the built-in caller is done. rnaindel analysis completed successfully. # all steps done. Fifteen coding indels are reported in the ouput VCF file: 2 somatic, 1 germline, and 12 artifact indels (see INFO field). The two PTEN indels are predicted as somatic. The first indel is a complex indel in which a 2-nt deletion and a 9-nt insertion are involved. This indel is detected as a 7-nt insertion at codon 233. The second indel is also detected as a 7-nt insertion at codon 246, not as a 39-nt insertion, due to the soft-clipped alignment. Working with GATK-HaplotypeCaller The sample BAM file was preprocessed following GATK RNA-Seq Variant Calling BestPractice . GATK-HC (ver 4.0.2.1) called variants in the preprocessed BAM file ( sample.gatk.bam ) and generated a VCF file ( sample_gatk.vcf ). Now, the indels in the GATK VCF file are classified. Please input the original BAM file (sample.bam), not the preprocessed one (sample.gatk.bam) . $ rnaindel analysis -i ./sample_data/inputs/sample.bam \\ -v ./sample_data/inputs/sample_gatk.vcf \\ -o your_test_with_gatk_hc.vcf \\ -r ./sample_data/inputs/chr10.fa \\ -d ./data_dir_38 rnaindel analysis completed successfully. # all steps done (no calling by the built-in caller) Four coding indels are reported in the output VCF file: 2 somatic, 1 germline, and 1 artifact. Both PTEN indels are predicated as somatic. The 39-nt insertion at codon 246 is also detected as a 7-nt insertion by GATK-HC. However, GATK-HC detected the indel at codon 234 as a combination of two insertions: the GGCCC insertion at chr10:87957916 and the TG insertion at chr10:87957917. In the output VCF , these two are annotated as \"RQB=chr10:87957916:G:GGGCCCAT\". This means that RNAIndel could not find these two insertions in the BAM file as reported by GATK-HC and, instead, found a GGCCCAT insertion at chr10:87957916 and used this for prediction; they were rescued by (RQB) the GGCCCAT insertion.","title":"Index"},{"location":"sample_data/#introduction","text":"Here, we demonstrate an analysis example using sample data prepared from the Jurkat T-cell leukemia cell line. This cell line harbors two known indels in the PTEN tumor suppressor gene: a 2-nt deletion followed by a 9-nt insertion at codon 234 and a 39-nt insertion at codon 246 ( Shan et al. 2000 ). We apply RNAIndel to the sample data , which contains the GRCh38 region chr10:80,000,000-90,000,000 (the PTEN locus is chr10:87,863,113-87,971,930).","title":"Introduction"},{"location":"sample_data/#setup","text":"We assume RNAIndel is installed . Step 1: Download the data_pakage and sample data . Step 2: Unpack them under your convenient directory. cd your/convenient/directory tar xvzf sample_data.tar.gz tar xvzf data_dir_38.tar.gz \"sample_data\" directory is structured: sample_data |_ inputs (sample BAM & reference FASTA files) |_ outputs (sample output VCF files)","title":"Setup"},{"location":"sample_data/#perform-analysis","text":"","title":"Perform analysis"},{"location":"sample_data/#working-with-the-built-in-caller","text":"$ rnaindel analysis -i ./sample_data/inputs/sample.bam \\ -o your_test_with_built_in_caller.vcf \\ -r ./sample_data/inputs/chr10.fa \\ -d ./data_dir_38 indel calling completed successfully. # indel calling by the built-in caller is done. rnaindel analysis completed successfully. # all steps done. Fifteen coding indels are reported in the ouput VCF file: 2 somatic, 1 germline, and 12 artifact indels (see INFO field). The two PTEN indels are predicted as somatic. The first indel is a complex indel in which a 2-nt deletion and a 9-nt insertion are involved. This indel is detected as a 7-nt insertion at codon 233. The second indel is also detected as a 7-nt insertion at codon 246, not as a 39-nt insertion, due to the soft-clipped alignment.","title":"Working with the built-in caller"},{"location":"sample_data/#working-with-gatk-haplotypecaller","text":"The sample BAM file was preprocessed following GATK RNA-Seq Variant Calling BestPractice . GATK-HC (ver 4.0.2.1) called variants in the preprocessed BAM file ( sample.gatk.bam ) and generated a VCF file ( sample_gatk.vcf ). Now, the indels in the GATK VCF file are classified. Please input the original BAM file (sample.bam), not the preprocessed one (sample.gatk.bam) . $ rnaindel analysis -i ./sample_data/inputs/sample.bam \\ -v ./sample_data/inputs/sample_gatk.vcf \\ -o your_test_with_gatk_hc.vcf \\ -r ./sample_data/inputs/chr10.fa \\ -d ./data_dir_38 rnaindel analysis completed successfully. # all steps done (no calling by the built-in caller) Four coding indels are reported in the output VCF file: 2 somatic, 1 germline, and 1 artifact. Both PTEN indels are predicated as somatic. The 39-nt insertion at codon 246 is also detected as a 7-nt insertion by GATK-HC. However, GATK-HC detected the indel at codon 234 as a combination of two insertions: the GGCCC insertion at chr10:87957916 and the TG insertion at chr10:87957917. In the output VCF , these two are annotated as \"RQB=chr10:87957916:G:GGGCCCAT\". This means that RNAIndel could not find these two insertions in the BAM file as reported by GATK-HC and, instead, found a GGCCCAT insertion at chr10:87957916 and used this for prediction; they were rescued by (RQB) the GGCCCAT insertion.","title":"Working with GATK-HaplotypeCaller"},{"location":"training/","text":"Train RNAIndel RNAIndel trains the model using your training set. Step 1 (feature calculation) Features are calculated for each indel and reported in a tab-delimited file. By default, RNAIndel calculates features based on a call set by the built-in caller. rnaindel feature -i BAM -o OUTPUT_TAB -r REFERENCE -d DATA_DIR [other options] To calculate for your caller's call set, specify the input VCF from your caller with -v . rnaindel feature -i BAM -v INPUT_VCF -o OUTPUT_TAB -r REFERENCE -d DATA_DIR [other options] To use your germline indel database for training, specify the database with -g . The database is expected to be a bgzip-compressed VCF file with no missing values in the ID field. rnaindel feature -i BAM -o OUTPUT_TAB -r REFERENCE -d DATA_DIR -g YOUR_DB [other options] Options -i input STAR -mapped BAM file (required) -o output tab-delimited file (required) -r reference genome (GRCh37 or 38) FASTA file (required) -d data directory contains trained models and databases (required) -v VCF file from user's caller (default: None) -g user-provided germline indel database in tabixed VCF format (default: None) other options (click to open) -q STAR mapping quality MAPQ for unique mappers (default: 255) -p number of cores (default: 1) -m maximum heap space (default: 6000m) -l direcotry to store log files (default: current) --exclude-softclipped-alignments softclipped indels will not be used for analysis if used (default: False) Step 2 (annotation) The output tab-delimited file has \\\"truth\\\" column. Users annotate each indel by filling the column. Possible values are: somatic, germline, artifact Repeat Step 1 and 2 for N samples. Step 3 (update models) Users concatenate the annotated files. Here, assuming the files are named \\\"sample.i.tab\\\" (i = 1,...,N), head -1 sample.1.tab > training_set.tab # keep the header line tail -n +2 -q sample.*.tab > training_set.tab # concatenate files without header The concatenated file is used as a training set to update the models. Specify the indel class to be trained by -c . rnaindel training -t TRAINING_SET -d DATA_DIR -c INDEL_CLASS [other options] Options -t training set with annotation (required) -d data directory contains trained models and databases (required) -c indel class to be trained. \"s\" for single-nucleotide indel and \"m\" for multi-nucleotide indel (required) other options (click to open) -k number of folds in k-fold cross-validation (default: 5) -p number of processes (default: 1) -l directory to ouput log files (default: current) --ds-beta F beta to be optimized in down sampling step. Optimized for TPR if beta > 100. (default: 10) --fs-beta F beta to be optimized in feature selection step. Optimized for TPR if beta > 100. (default: 10) --pt-beta F beta to be optimized in parameter tuning step. Optimized for TPR if beta > 100. (default: 10) --downsample-ratio train with a user-specified downsample ratio: integer between 1 and 20. (default: None) --feature-names train with a user-specified subset of features: input example (default: None) --auto-param train with sklearn.RandomForestClassifer's max_features=\"auto\" (default: False)","title":"Training"},{"location":"training/#train-rnaindel","text":"RNAIndel trains the model using your training set.","title":"Train RNAIndel"},{"location":"training/#step-1-feature-calculation","text":"Features are calculated for each indel and reported in a tab-delimited file. By default, RNAIndel calculates features based on a call set by the built-in caller. rnaindel feature -i BAM -o OUTPUT_TAB -r REFERENCE -d DATA_DIR [other options] To calculate for your caller's call set, specify the input VCF from your caller with -v . rnaindel feature -i BAM -v INPUT_VCF -o OUTPUT_TAB -r REFERENCE -d DATA_DIR [other options] To use your germline indel database for training, specify the database with -g . The database is expected to be a bgzip-compressed VCF file with no missing values in the ID field. rnaindel feature -i BAM -o OUTPUT_TAB -r REFERENCE -d DATA_DIR -g YOUR_DB [other options]","title":"Step 1 (feature calculation)"},{"location":"training/#options","text":"-i input STAR -mapped BAM file (required) -o output tab-delimited file (required) -r reference genome (GRCh37 or 38) FASTA file (required) -d data directory contains trained models and databases (required) -v VCF file from user's caller (default: None) -g user-provided germline indel database in tabixed VCF format (default: None) other options (click to open) -q STAR mapping quality MAPQ for unique mappers (default: 255) -p number of cores (default: 1) -m maximum heap space (default: 6000m) -l direcotry to store log files (default: current) --exclude-softclipped-alignments softclipped indels will not be used for analysis if used (default: False)","title":"Options"},{"location":"training/#step-2-annotation","text":"The output tab-delimited file has \\\"truth\\\" column. Users annotate each indel by filling the column. Possible values are: somatic, germline, artifact Repeat Step 1 and 2 for N samples.","title":"Step 2 (annotation)"},{"location":"training/#step-3-update-models","text":"Users concatenate the annotated files. Here, assuming the files are named \\\"sample.i.tab\\\" (i = 1,...,N), head -1 sample.1.tab > training_set.tab # keep the header line tail -n +2 -q sample.*.tab > training_set.tab # concatenate files without header The concatenated file is used as a training set to update the models. Specify the indel class to be trained by -c . rnaindel training -t TRAINING_SET -d DATA_DIR -c INDEL_CLASS [other options]","title":"Step 3 (update models)"},{"location":"training/#options_1","text":"-t training set with annotation (required) -d data directory contains trained models and databases (required) -c indel class to be trained. \"s\" for single-nucleotide indel and \"m\" for multi-nucleotide indel (required) other options (click to open) -k number of folds in k-fold cross-validation (default: 5) -p number of processes (default: 1) -l directory to ouput log files (default: current) --ds-beta F beta to be optimized in down sampling step. Optimized for TPR if beta > 100. (default: 10) --fs-beta F beta to be optimized in feature selection step. Optimized for TPR if beta > 100. (default: 10) --pt-beta F beta to be optimized in parameter tuning step. Optimized for TPR if beta > 100. (default: 10) --downsample-ratio train with a user-specified downsample ratio: integer between 1 and 20. (default: None) --feature-names train with a user-specified subset of features: input example (default: None) --auto-param train with sklearn.RandomForestClassifer's max_features=\"auto\" (default: False)","title":"Options"}]}