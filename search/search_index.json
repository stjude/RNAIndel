{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"RNAIndel RNAIndel calls coding indels from tumor RNA-Seq data and classifies them as somatic, germline, and artifactual. RNAIndel supports GRCh38 and 37. Explore the docs \u00bb Read the paper \u00bb Request Feature | Report Bug \u2b50 Consider starring the repo! \u2b50 What's new in Version 3 New implementation with indelpost , an indel realigner/phaser. * faster analysis (typically < 20 min with 8 cores) * somatic complex indel calling in RNA-Seq * ensemble calling with your own caller (e.g., GATK HaplotypeCaller/MuTect2) * improved sensitivity for homopolymer indels by error-profile outlier analysis Quick Start RNAIndel can be executed via Docker or run locally, downloadable via PyPI. Docker We publish our latest docker builds on GitHub. You can run the latest code base by running the following command > docker run --rm -v ${PWD}:/data ghcr.io/stjude/rnaindel:latest If you want to have a more native feel, you can add an alias to your shell's rc file. > alias rnaindel=\"docker run --rm -v ${PWD}:/data ghcr.io/stjude/rnaindel:latest\" Note: if its the first time you are executing the docker run command, you will see the output of docker downloading the image PyPI RNAIndel depends on python>=3.6.0 and java>=1.8.0 . Installing via the pip command will install the following packages: * indelpost>=0.0.4 * pysam>=0.15.0 * cython>=0.29.12 * numpy>=1.16.0 * ssw-py==0.2.6 * pandas>=0.23.0 * scikit-learn>=0.22.0 > pip install indelpost --no-binary indelpost --no-build-isolation > pip install rnaindel Test the installation. > rnaindel -h usage: rnaindel <subcommand> [<args>] subcommands are: PredictIndels Predict somatic/germline/artifact indels from tumor RNA-Seq data CalculateFeatures Calculate and report features for training Train Perform model training CountOccurrence Count occurrence within cohort to filter false somatic predictions positional arguments: subcommand PredictIndels, CalculateFeatures, Train, CountOccurrence optional arguments: -h, --help show this help message and exit --version show program's version number and exit DataPackage Download data package (version 3 is not compatible with the previous data package). #GRCh38 curl -LO https://zenodo.org/record/6109305/files/data_dir_grch38.tar.gz tar -zxf data_dir_grch38.v3.tar.gz #GRCh37 curl -LO https://zenodo.org/record/6109305/files/data_dir_grch37.tar.gz tar -zxf data_dir_grch37.v3.tar.gz Usage RNAIndel has 4 subcommands: * PredictIndels analyze RNA-Seq data for indel discovery * CalculateFeatures calculate features for training * Train train models with user's dataset * CountOccurrence annotate over-represented somatic predictions Subcommands are invoked: > rnaindel subcommand [subcommand-specific options] Discover somatic indels Input BAM file RNAIndel expects STAR 2-pass mapped BAM file with sorted by coordinate and MarkDuplicates . Further preprocessing such as indel realignment may prevent desired behavior. Standard calling This mode uses the built-in caller to analyze simple and complex indels. > rnaindel PredictIndels -i input.bam -o output.vcf -r ref.fa -d data_dir -p 8 (default 1) Ensemble calling Indels in the exernal VCF (supplied by -v) are integrated to the callset by the built-in caller to boost performance. See demo . > rnaindel PredictIndels -i input.bam -o output.vcf -r ref.fa -d data_dir -v gatk.vcf.gz -p 8 With DNA-Seq Somatic predictions from RNA-Seq are validated against DNA-Seq on the fly. > rnaindel PredictIndels -i input.bam -o output.vcf -r ref.fa -d data_dir -t tumor.dna.bam -n normal.dna.bam -p 8 Extravagenza Leverage all resources for best performance. > rnaindel PredictIndels -i input.bam -o output.vcf -r ref.fa -d data_dir -v mutect2.vcf.gz -t tumor.dna.bam -n normal.dna.bam -p 8 Options -i input STAR -mapped BAM file (required) -o output VCF file (required) -r reference genome FASTA file (required) -d data directory contains trained models and databases (required) -v VCF file (must be .vcf.gz + index) from user's caller. (default: None) -p number of cores (default: 1) other options (click to open) -q STAR mapping quality MAPQ for unique mappers (default: 255) -m maximum heap space (default: 6000m) --region target genomic region. specify by chrN:start-stop (default: None) --pon user's defined list of non-somatic calls such as PanelOfNormals. Supply as .vcf.gz with index (default: None) --include-all-external-calls set to include all indels in VCF file supplied by -v. (default: False. Use only calls with PASS in FILTER) --skip-homopolyer-outlier-analysis no outlier analysis for homopolymer indels (repeat > 4) performed if set. (default: False) --safety-mode deactivate parallelism at realignment step. may be required to run with -p > 1 on some platforms. (default: False) Benchmarking Using pediatric tumor RNA-Seq samples ( SJC-DS-1003 , n=77), the time and memory consumption was benchmarked for ensemble calling with 8 cores (i.e., -p 8) on a server with 32-core AMD EPYC 7542 CPU @2.90 GHz. Run time (wall) Max memory median 374 sec 18.6 GB max 1388 sec 23.5 GB Train RNAIndel Users can train RNAIndel with their own training set. Annotate over-represented putative somatic indels Check occurrence to filter probable false positives. Contact kohei.hagiwara[AT]stjude.org Please let me know what your experience with RNAIndel was like (even bad comments are welcome)! Citation Published in Bioinformatics","title":"Home"},{"location":"#whats-new-in-version-3","text":"New implementation with indelpost , an indel realigner/phaser. * faster analysis (typically < 20 min with 8 cores) * somatic complex indel calling in RNA-Seq * ensemble calling with your own caller (e.g., GATK HaplotypeCaller/MuTect2) * improved sensitivity for homopolymer indels by error-profile outlier analysis","title":"What's new in Version 3"},{"location":"#quick-start","text":"RNAIndel can be executed via Docker or run locally, downloadable via PyPI.","title":"Quick Start"},{"location":"#docker","text":"We publish our latest docker builds on GitHub. You can run the latest code base by running the following command > docker run --rm -v ${PWD}:/data ghcr.io/stjude/rnaindel:latest If you want to have a more native feel, you can add an alias to your shell's rc file. > alias rnaindel=\"docker run --rm -v ${PWD}:/data ghcr.io/stjude/rnaindel:latest\" Note: if its the first time you are executing the docker run command, you will see the output of docker downloading the image","title":"Docker"},{"location":"#pypi","text":"RNAIndel depends on python>=3.6.0 and java>=1.8.0 . Installing via the pip command will install the following packages: * indelpost>=0.0.4 * pysam>=0.15.0 * cython>=0.29.12 * numpy>=1.16.0 * ssw-py==0.2.6 * pandas>=0.23.0 * scikit-learn>=0.22.0 > pip install indelpost --no-binary indelpost --no-build-isolation > pip install rnaindel Test the installation. > rnaindel -h usage: rnaindel <subcommand> [<args>] subcommands are: PredictIndels Predict somatic/germline/artifact indels from tumor RNA-Seq data CalculateFeatures Calculate and report features for training Train Perform model training CountOccurrence Count occurrence within cohort to filter false somatic predictions positional arguments: subcommand PredictIndels, CalculateFeatures, Train, CountOccurrence optional arguments: -h, --help show this help message and exit --version show program's version number and exit","title":"PyPI"},{"location":"#datapackage","text":"Download data package (version 3 is not compatible with the previous data package). #GRCh38 curl -LO https://zenodo.org/record/6109305/files/data_dir_grch38.tar.gz tar -zxf data_dir_grch38.v3.tar.gz #GRCh37 curl -LO https://zenodo.org/record/6109305/files/data_dir_grch37.tar.gz tar -zxf data_dir_grch37.v3.tar.gz","title":"DataPackage"},{"location":"#usage","text":"RNAIndel has 4 subcommands: * PredictIndels analyze RNA-Seq data for indel discovery * CalculateFeatures calculate features for training * Train train models with user's dataset * CountOccurrence annotate over-represented somatic predictions Subcommands are invoked: > rnaindel subcommand [subcommand-specific options]","title":"Usage"},{"location":"#discover-somatic-indels","text":"","title":"Discover somatic indels"},{"location":"#input-bam-file","text":"RNAIndel expects STAR 2-pass mapped BAM file with sorted by coordinate and MarkDuplicates . Further preprocessing such as indel realignment may prevent desired behavior.","title":"Input BAM file"},{"location":"#standard-calling","text":"This mode uses the built-in caller to analyze simple and complex indels. > rnaindel PredictIndels -i input.bam -o output.vcf -r ref.fa -d data_dir -p 8 (default 1)","title":"Standard calling"},{"location":"#ensemble-calling","text":"Indels in the exernal VCF (supplied by -v) are integrated to the callset by the built-in caller to boost performance. See demo . > rnaindel PredictIndels -i input.bam -o output.vcf -r ref.fa -d data_dir -v gatk.vcf.gz -p 8","title":"Ensemble calling"},{"location":"#with-dna-seq","text":"Somatic predictions from RNA-Seq are validated against DNA-Seq on the fly. > rnaindel PredictIndels -i input.bam -o output.vcf -r ref.fa -d data_dir -t tumor.dna.bam -n normal.dna.bam -p 8","title":"With DNA-Seq"},{"location":"#extravagenza","text":"Leverage all resources for best performance. > rnaindel PredictIndels -i input.bam -o output.vcf -r ref.fa -d data_dir -v mutect2.vcf.gz -t tumor.dna.bam -n normal.dna.bam -p 8","title":"Extravagenza"},{"location":"#options","text":"-i input STAR -mapped BAM file (required) -o output VCF file (required) -r reference genome FASTA file (required) -d data directory contains trained models and databases (required) -v VCF file (must be .vcf.gz + index) from user's caller. (default: None) -p number of cores (default: 1) other options (click to open) -q STAR mapping quality MAPQ for unique mappers (default: 255) -m maximum heap space (default: 6000m) --region target genomic region. specify by chrN:start-stop (default: None) --pon user's defined list of non-somatic calls such as PanelOfNormals. Supply as .vcf.gz with index (default: None) --include-all-external-calls set to include all indels in VCF file supplied by -v. (default: False. Use only calls with PASS in FILTER) --skip-homopolyer-outlier-analysis no outlier analysis for homopolymer indels (repeat > 4) performed if set. (default: False) --safety-mode deactivate parallelism at realignment step. may be required to run with -p > 1 on some platforms. (default: False)","title":"Options"},{"location":"#benchmarking","text":"Using pediatric tumor RNA-Seq samples ( SJC-DS-1003 , n=77), the time and memory consumption was benchmarked for ensemble calling with 8 cores (i.e., -p 8) on a server with 32-core AMD EPYC 7542 CPU @2.90 GHz. Run time (wall) Max memory median 374 sec 18.6 GB max 1388 sec 23.5 GB","title":"Benchmarking"},{"location":"#train-rnaindel","text":"Users can train RNAIndel with their own training set.","title":"Train RNAIndel"},{"location":"#annotate-over-represented-putative-somatic-indels","text":"Check occurrence to filter probable false positives.","title":"Annotate over-represented putative somatic indels"},{"location":"#contact","text":"kohei.hagiwara[AT]stjude.org Please let me know what your experience with RNAIndel was like (even bad comments are welcome)!","title":"Contact"},{"location":"#citation","text":"Published in Bioinformatics","title":"Citation"},{"location":"filtering/","text":"Recurrent somatic indels Except for a few known hotspots, true somatic indels rarely recurr. Ocurrence annotation When multiple RNAIndel output VCF files are generated from the same cohort, occurrence with in the cohort is annotated in INFO field. rnaindel CountOccurrence --vcf-list vcf_paths.txt -r reference.fa Options --vcf-list file containing paths to RNAIndel output VCF files (path/line) (required) -r reference genome FASTA file (required) --out-dir output directory for annotated VCF file. The input file dir is used if not specified. (file name will not be changed after annotation)","title":"Filtering"},{"location":"filtering/#recurrent-somatic-indels","text":"Except for a few known hotspots, true somatic indels rarely recurr.","title":"Recurrent somatic indels"},{"location":"filtering/#ocurrence-annotation","text":"When multiple RNAIndel output VCF files are generated from the same cohort, occurrence with in the cohort is annotated in INFO field. rnaindel CountOccurrence --vcf-list vcf_paths.txt -r reference.fa","title":"Ocurrence annotation"},{"location":"filtering/#options","text":"--vcf-list file containing paths to RNAIndel output VCF files (path/line) (required) -r reference genome FASTA file (required) --out-dir output directory for annotated VCF file. The input file dir is used if not specified. (file name will not be changed after annotation)","title":"Options"},{"location":"training/","text":"Train RNAIndel Train the RNAIndel model using your training set. Step 1 (feature calculation) Features are calculated for each indel and reported in a tab-delimited file. Suppose we have N samples. For i-th sample: rnaindel CalculateFeatures -i sample.i.bam \\ -o sample.i.tab \\ -r reference.fa \\ -d ./data_dir_grch38\\ [-v sample.i.external.vcf.gz] Step 2 (annotation) The output tab-delimited file has \\\"truth\\\" column. Users annotate each indel by filling the column. Possible values are: somatic, germline, artifact Repeat Step 1 and 2 for N samples. Step 3 (update models) Concatenate the annotated files. head -1 sample.1.tab > training_set.tab # keep the header line tail -n +2 -q sample.*.tab > training_set.tab # concatenate files without header The concatenated file is used as a training set to update the models. Specify the indel class to be trained by -c . rnaindel Train -t training_set.tab -d ./data_dir_grch38 -c indel_class_to_train [other options] Options -t training set with annotation (required) -d data directory contains trained models and databases (required) -c indel class to be trained. \"s\" for single-nucleotide indel, \"m\" for multi-nucleotide indel, \"h\" for homopolymer indel(required) other options (click to open) -k number of folds in k-fold cross-validation (default: 5) -p number of processes (default: 1) -l directory to ouput log files (default: current) --ds-beta F beta to be optimized in down sampling step. Optimized for TPR if beta > 100. (default: 10) --fs-beta F beta to be optimized in feature selection step. Optimized for TPR if beta > 100. (default: 10) --pt-beta F beta to be optimized in parameter tuning step. Optimized for TPR if beta > 100. (default: 10) --downsample-ratio train with a user-specified downsample ratio: integer between 1 and 20. (default: None) --feature-names train with a user-specified subset of features: input example (default: None) --auto-param train with sklearn.RandomForestClassifer's max_features=\"auto\" (default: False)","title":"Training"},{"location":"training/#train-rnaindel","text":"Train the RNAIndel model using your training set.","title":"Train RNAIndel"},{"location":"training/#step-1-feature-calculation","text":"Features are calculated for each indel and reported in a tab-delimited file. Suppose we have N samples. For i-th sample: rnaindel CalculateFeatures -i sample.i.bam \\ -o sample.i.tab \\ -r reference.fa \\ -d ./data_dir_grch38\\ [-v sample.i.external.vcf.gz]","title":"Step 1 (feature calculation)"},{"location":"training/#step-2-annotation","text":"The output tab-delimited file has \\\"truth\\\" column. Users annotate each indel by filling the column. Possible values are: somatic, germline, artifact Repeat Step 1 and 2 for N samples.","title":"Step 2 (annotation)"},{"location":"training/#step-3-update-models","text":"Concatenate the annotated files. head -1 sample.1.tab > training_set.tab # keep the header line tail -n +2 -q sample.*.tab > training_set.tab # concatenate files without header The concatenated file is used as a training set to update the models. Specify the indel class to be trained by -c . rnaindel Train -t training_set.tab -d ./data_dir_grch38 -c indel_class_to_train [other options]","title":"Step 3 (update models)"},{"location":"training/#options","text":"-t training set with annotation (required) -d data directory contains trained models and databases (required) -c indel class to be trained. \"s\" for single-nucleotide indel, \"m\" for multi-nucleotide indel, \"h\" for homopolymer indel(required) other options (click to open) -k number of folds in k-fold cross-validation (default: 5) -p number of processes (default: 1) -l directory to ouput log files (default: current) --ds-beta F beta to be optimized in down sampling step. Optimized for TPR if beta > 100. (default: 10) --fs-beta F beta to be optimized in feature selection step. Optimized for TPR if beta > 100. (default: 10) --pt-beta F beta to be optimized in parameter tuning step. Optimized for TPR if beta > 100. (default: 10) --downsample-ratio train with a user-specified downsample ratio: integer between 1 and 20. (default: None) --feature-names train with a user-specified subset of features: input example (default: None) --auto-param train with sklearn.RandomForestClassifer's max_features=\"auto\" (default: False)","title":"Options"},{"location":"walkthrough/","text":"Analyzing sample dataset Using reads around the PTEN tumor suppresor gene locus (chr10:87,863,113-87,971,930 on GRCh38), the sample dataset was prepared by GATK Best Practice for RNA-Seq . The dataset contains the BAM and VCF files (not FASTQ) To download: curl -LO https://zenodo.org/record/6109305/files/sampledataset.tar.gz tar -zxf sampledataset.tar.gz RNAIndel integrates the callset from the built-in caller and that from GAKT (pre-called). To do this, input the original BAM file (i.e., sample.bam, not the pre-processed one) and the GATK VCF file: rnaindel PredictIndels -i sampledataset/sample.bam \\ # do not use sample.gatk.bam -o test.vcf \\ -r sampledataset/chr10.fa \\ -d data_dir_grch38 \\ -v sampledataset/sample.gatk.vcf.gz \\ The output VCF reports the expressed coding indels called from the 2 methods. Each indel is annoated in INFO field for prdicted class (somatic, germline, artifact) and by which caller it was detected (built-in, external, both). In this example, indels predicted as somatic are: CHROM POS REF ALT INFO chr10 87957917 AC GGCCCATGG predicted_class=somatic;...;CALLER=both chr10 87957955 C CCTGGGTT predicted_class=somatic;...;CALLER=both These PTEN indels are called by the built-in and GATK HaplotypeCaller. The first indel is reported as a complex indel AC>GGCCCATGG.","title":"Index"},{"location":"walkthrough/#analyzing-sample-dataset","text":"Using reads around the PTEN tumor suppresor gene locus (chr10:87,863,113-87,971,930 on GRCh38), the sample dataset was prepared by GATK Best Practice for RNA-Seq . The dataset contains the BAM and VCF files (not FASTQ) To download: curl -LO https://zenodo.org/record/6109305/files/sampledataset.tar.gz tar -zxf sampledataset.tar.gz RNAIndel integrates the callset from the built-in caller and that from GAKT (pre-called). To do this, input the original BAM file (i.e., sample.bam, not the pre-processed one) and the GATK VCF file: rnaindel PredictIndels -i sampledataset/sample.bam \\ # do not use sample.gatk.bam -o test.vcf \\ -r sampledataset/chr10.fa \\ -d data_dir_grch38 \\ -v sampledataset/sample.gatk.vcf.gz \\ The output VCF reports the expressed coding indels called from the 2 methods. Each indel is annoated in INFO field for prdicted class (somatic, germline, artifact) and by which caller it was detected (built-in, external, both). In this example, indels predicted as somatic are: CHROM POS REF ALT INFO chr10 87957917 AC GGCCCATGG predicted_class=somatic;...;CALLER=both chr10 87957955 C CCTGGGTT predicted_class=somatic;...;CALLER=both These PTEN indels are called by the built-in and GATK HaplotypeCaller. The first indel is reported as a complex indel AC>GGCCCATGG.","title":"Analyzing sample dataset"}]}